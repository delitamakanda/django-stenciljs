{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.scss","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/landing/landing.component.html","webpack:///./src/app/components/landing/landing.component.scss","webpack:///./src/app/components/landing/landing.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.scss","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/logout/logout.component.html","webpack:///./src/app/components/logout/logout.component.scss","webpack:///./src/app/components/logout/logout.component.ts","webpack:///./src/app/components/navigation-bar/navigation-bar.component.html","webpack:///./src/app/components/navigation-bar/navigation-bar.component.scss","webpack:///./src/app/components/navigation-bar/navigation-bar.component.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.scss","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/side-nav/side-nav.component.html","webpack:///./src/app/components/side-nav/side-nav.component.scss","webpack:///./src/app/components/side-nav/side-nav.component.ts","webpack:///./src/app/models/auth.ts","webpack:///./src/app/pipes/translate/translate.pipe.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/auth/token.interceptor.ts","webpack:///./src/app/services/dashboard/dashboard.service.ts","webpack:///./src/app/services/translate/translate.service.ts","webpack:///./src/app/services/user/gender/gender.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterComponent }   from './components/register/register.component';\nimport { LoginComponent }   from './components/login/login.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LogoutComponent } from './components/logout/logout.component';\n\nconst routes: Routes = [\n    // { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'dashboard', component: DashboardComponent },\n    { path: '', component: LandingComponent },\n    { path: 'logout', component: LogoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"app-container\\\">\\n    <div class=\\\"language-switching\\\">\\n        <button mat-mini-fab (click)=\\\"setLang('fr')\\\">FR</button>\\n        <button mat-mini-fab (click)=\\\"setLang('en')\\\">EN</button>\\n    </div>\\n    <app-side-nav></app-side-nav>\\n</div>\\n\"","module.exports = \".app-container {\\n  position: relative;\\n  height: 100%;\\n  width: 100%; }\\n\\n.language-switching {\\n  position: fixed;\\n  z-index: 2;\\n  right: 1em;\\n  bottom: 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxpdGFtYWthbmRhL1Byb2plY3RzL2RhdGluZy9mcm9udGVuZC9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osV0FBVyxFQUFBOztBQUdmO0VBQ0ksZUFBZTtFQUNmLFVBQVU7RUFDVixVQUFVO0VBQ1YsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcC1jb250YWluZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5sYW5ndWFnZS1zd2l0Y2hpbmcge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB6LWluZGV4OiAyO1xuICAgIHJpZ2h0OiAxZW07XG4gICAgYm90dG9tOiAxZW07XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { TranslateService } from './services/translate/translate.service';\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n    constructor(\n        private translate: TranslateService,\n        private matIconRegistry: MatIconRegistry,\n        private domSanitizer: DomSanitizer\n    ) {\n        this.matIconRegistry.addSvgIcon(\n          \"love\",\n          this.domSanitizer.bypassSecurityTrustResourceUrl(`${environment.staticAssetsUrl}love_icon.svg`)\n        );\n    }\n\n    ngOnInit() {\n    }\n\n    ngOnDestroy() {\n\n    }\n\n    setLang(lang: string) {\n        this.translate.use(lang);\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { environment } from '../environments/environment';\n\nimport { MaterialModule } from './shared/material.module';\n\nimport { UserService } from './services/user/user.service';\nimport { AuthService } from './services/auth/auth.service';\nimport { GenderService } from './services/user/gender/gender.service';\nimport { DashboardService } from './services/dashboard/dashboard.service';\nimport { TranslateService } from './services/translate/translate.service';\nimport { TranslatePipe } from './pipes/translate/translate.pipe';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LogoutComponent } from './components/logout/logout.component';\n\n// UI\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NavigationBarComponent } from './components/navigation-bar/navigation-bar.component';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\n\n// import { CookieService } from 'angular2-cookie/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { TokenInterceptor } from './services/auth/token.interceptor';\n\nexport function setupTranslateFactory (service: TranslateService): Function {\n    return () => service.use('fr');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    TranslatePipe,\n    LandingComponent,\n    DashboardComponent,\n    NavigationBarComponent,\n    LogoutComponent,\n    SideNavComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    //ServiceWorkerModule.register('service-worker.js', { enabled: environment.production }),\n    AppRoutingModule\n  ],\n  providers: [\n      UserService,\n      AuthService,\n      GenderService,\n      CookieService,\n      TranslateService,\n      {\n          provide: APP_INITIALIZER,\n          useFactory: setupTranslateFactory,\n          deps: [TranslateService],\n          multi: true\n      },\n      TokenInterceptor,\n      DashboardService,\n      {\n          provide: HTTP_INTERCEPTORS,\n          useClass: TokenInterceptor,\n          multi: true\n      }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n<p>\\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n</p>\\n\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { User } from '../../models/user';\nimport { AuthLogin } from '../../models/auth';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { DashboardService } from '../../services/dashboard/dashboard.service';\nimport { TranslateService } from '../../services/translate/translate.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n    listRelationship: any;\n    results = [];\n    userData: User;\n    tokenExists: boolean;\n\n    constructor(\n        private translate: TranslateService,\n        private dashboardService: DashboardService,\n        private authService: AuthService,\n        public cookieService: CookieService\n    ) { }\n\n    ngOnInit() {\n        this.getData();\n    }\n\n    getData(){\n        this.listRelationship = this.dashboardService.list().subscribe(data=>{\n            console.log(data)\n            this.results = data.results\n        })\n    }\n\n    ngOnDestroy() {\n        if (this.listRelationship){\n            this.listRelationship.unsubscribe()\n        }\n    }\n\n}\n","module.exports = \"<div class=\\\"box flex\\\">\\n\\t<p>\\n\\t\\t<!--<img src=\\\"http://localhost:4200/assets/logo-love.svg\\\" class=\\\"logo\\\">-->\\n\\t\\t<mat-icon svgIcon=\\\"love\\\" aria-hidden=\\\"false\\\"></mat-icon>\\n\\t</p>\\n\\t<p>\\n\\t\\t<button mat-raised-button routerLink=\\\"login\\\">{{ 'loginLabel' | translate }}</button>\\n\\t</p>\\n\\t<p>\\n\\t\\t<button mat-raised-button routerLink=\\\"register\\\">{{ 'registerLabel' | translate }}</button>\\n\\t</p>\\n</div>\\n\"","module.exports = \".box.flex {\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column;\\n  align-items: center;\\n  height: 100vh; }\\n\\n.box p {\\n  text-align: center; }\\n\\nmat-icon {\\n  font-size: 60px;\\n  height: 60px;\\n  width: 60px;\\n  line-height: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxpdGFtYWthbmRhL1Byb2plY3RzL2RhdGluZy9mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbGFuZGluZy9sYW5kaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLGFBQWEsRUFBQTs7QUFHZjtFQUNFLGtCQUFrQixFQUFBOztBQUdwQjtFQUNJLGVBZk87RUFnQlAsWUFoQk87RUFpQlAsV0FqQk87RUFrQlAsaUJBbEJPLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xhbmRpbmcvbGFuZGluZy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRzaXplOiA2MHB4O1xuXG4uYm94LmZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLmJveCBwIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5tYXQtaWNvbiB7XG4gICAgZm9udC1zaXplOiAkc2l6ZTtcbiAgICBoZWlnaHQ6ICRzaXplO1xuICAgIHdpZHRoOiAkc2l6ZTtcbiAgICBsaW5lLWhlaWdodDogJHNpemU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.scss']\n})\nexport class LandingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n    <p *ngIf='didLogin'>\\n        Welcome! Get started <a [routerLink]=\\\"'/'\\\">here</a>.<br/><br/>\\n    </p>\\n    <p *ngIf='tokenExists'>\\n    You are already logged in! Would you like to <a routerLink='/logout'>logout</a>?\\n\\n        </p>\\n    <p>\\n        <mat-icon svgIcon=\\\"love\\\" aria-hidden=\\\"false\\\"></mat-icon>\\n    </p>\\n\\n    <form *ngIf='!userData && !tokenExists' [formGroup]='loginForm' #ourLoginDir='ngForm' (submit)='handleSubmit($event, ourLoginDir, loginForm)'>\\n        <p *ngIf='loginErrors'>{{ loginErrors }}</p>\\n        <mat-card-content>\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Username or Email\\\" formControlName=\\\"usernameField\\\" />\\n                <div *ngIf='usernameField.invalid && (usernameField.dirty || usernameField.touched)'>\\n                <mat-error *ngIf='usernameField.errors.required'>\\n                  Username is required.\\n                </mat-error>\\n                <mat-error *ngIf='usernameField.errors.maxlength'>\\n                   Max length is 280\\n                </mat-error>\\n                <mat-error *ngIf='usernameField.errors.minlength'>\\n                  Min length is 4\\n                </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"passwordField\\\" [type]=\\\"hide ? 'password' : 'text'\\\" />\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <div *ngIf='passwordField.invalid && (passwordField.dirty || passwordField.touched)'>\\n                    <mat-error *ngIf='passwordField.errors.required'>\\n                        Password is required.\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordField.errors.maxlength'>\\n                        Max length is 280\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordField.errors.minlength'>\\n                        Min length is 4\\n                    </mat-error>\\n                </div>\\n            </mat-form-field>\\n        </mat-card-content>\\n        <br />\\n        <mat-card-actions>\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"loginForm.invalid\\\">{{ 'loginLabel' | translate }}</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"ourLoginDir.resetForm({})\\\">{{ 'resetLabel' | translate }}</button>\\n        </mat-card-actions>\\n    </form>\\n\\n\\t<p>\\n\\t\\t<button mat-raised-button routerLink='/register'>{{ 'registerLabel' | translate }}</button>\\n\\t</p>\\n    <!--<mat-form-field>\\n      <input type=\\\"email\\\" matInput placeholder=\\\"Username or Email\\\" [(ngModel)]=\\\"user.emailOrUsername\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\n      <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n        Please enter a valid email address or username\\n      </mat-error>\\n      <mat-error *ngFor=\\\"let error of userService.errors.username\\\">{{ error }}</mat-error>\\n      <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n        Email is <strong>required</strong>\\n      </mat-error>\\n    </mat-form-field>-->\\n\\n  <!--<mat-form-field>\\n    <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"user.password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n    <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n    <mat-error *ngFor=\\\"let error of userService.errors.password\\\">{{ error }}</mat-error>\\n  </mat-form-field>-->\\n\\n  <!--<button (click)=\\\"signin()\\\" mat-raised-button>Login</button>-->\\n</div>\\n\"","module.exports = \"mat-icon {\\n  font-size: 60px;\\n  height: 60px;\\n  width: 60px;\\n  line-height: 60px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxpdGFtYWthbmRhL1Byb2plY3RzL2RhdGluZy9mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxlQUhPO0VBSVAsWUFKTztFQUtQLFdBTE87RUFNUCxpQkFOTyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRzaXplOiA2MHB4O1xuXG5tYXQtaWNvbiB7XG4gICAgZm9udC1zaXplOiAkc2l6ZTtcbiAgICBoZWlnaHQ6ICRzaXplO1xuICAgIHdpZHRoOiAkc2l6ZTtcbiAgICBsaW5lLWhlaWdodDogJHNpemU7XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { TranslateService } from '../../services/translate/translate.service';\n\nimport { AuthService } from '../../services/auth/auth.service';\nimport { UserService } from '../../services/user/user.service';\n\nimport { AuthLogin } from '../../models/auth';\nimport { User } from '../../models/user';\n// import { CookieService } from 'angular2-cookie/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy, ErrorStateMatcher {\n    hide = true;\n    public user: any;\n\n    userData: User;\n    loginForm: FormGroup;\n    usernameField: FormControl;\n    passwordField: FormControl;\n    authLoginSub: any;\n    loginErrors: any;\n    tokenExists: boolean;\n    didLogin = false;\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n\n    emailFormControl = new FormControl('', [\n        Validators.required,\n        Validators.email,\n    ]);\n\n    constructor(\n        private translate: TranslateService,\n        private userService: UserService,\n        private authService: AuthService,\n        public cookieService: CookieService\n    ) { }\n\n    ngOnInit() {\n\n        let username = this.authService.getUsername()\n          this.usernameField  = new FormControl(username, [\n                      Validators.required,\n                      Validators.minLength(0),\n                      Validators.maxLength(280)\n                 ])\n          this.passwordField  = new FormControl(\"\", [\n                      Validators.required,\n                      Validators.minLength(4),\n                      Validators.maxLength(280)\n                 ])\n          this.loginForm = new FormGroup({\n              'usernameField': this.usernameField,\n              'passwordField': this.passwordField\n          })\n          this.tokenExists = this.authService.checkToken();\n    }\n\n    ngOnDestroy() {\n        if (this.authLoginSub){\n          this.authLoginSub.unsubscribe()\n        }\n    }\n\n    doLogin(data) {\n        this.authLoginSub = this.authService.login(data).subscribe(data=>{\n       this.userData = data as User;\n       let token = this.userData.token || null;\n       let date = new Date(data.expires);\n       this.authService.performLogin(token, date);\n       this.authService.setUsername(this.userData);\n       this.didLogin = true;\n      }, error=>{\n        this.loginErrors = error['error']['detail']\n      })\n    }\n\n    handleSubmit(event:any, ourLoginDir:NgForm, loginFormGroup:FormGroup){\n          event.preventDefault()\n          if (ourLoginDir.submitted){\n              // interact with the server\n              let authLoginData = new AuthLogin(\n                  loginFormGroup.value['usernameField'],\n                  loginFormGroup.value['passwordField']\n                  )\n              this.doLogin(authLoginData)\n              ourLoginDir.resetForm({})\n          }\n      }\n\n    login() {\n        this.userService.login({'username': this.user.emailOrUsername, 'password': this.user.password});\n    }\n\n    signin () {\n        this.authService.login(this.user);\n    }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <p>\\n        <button mat-raised-button routerLink=\\\"/login\\\">{{ 'loginLabel' | translate }}</button>\\n    </p>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9nb3V0L2xvZ291dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n    constructor(private authService: AuthService) { }\n\n    ngOnInit() {\n        this.authService.performLogout(\"Logout\");\n    }\n\n}\n","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"navigation-toolbar\\\">\\n\\n  <mat-toolbar-row>\\n\\n    <button mat-icon-button (click)=\\\"toggleSidenav.emit()\\\">\\n      <mat-icon>menu</mat-icon>\\n    </button>\\n\\n    <span class=\\\"toolbar-title\\\"> {{ 'title' | translate }} </span>\\n\\n    <div fxFlex fxLayout fxLayoutAlign=\\\"flex-end\\\">\\n\\n      <ul fxLayout fxLayoutGap=\\\"20px\\\" class=\\\"navigation-items\\\">\\n\\n        <li fxHide.xs>\\n          <button mat-icon-button>\\n            <mat-icon>settings</mat-icon>\\n          </button>\\n        </li>\\n\\n        <li fxHide.xs>\\n          <button mat-icon-button>\\n            <mat-icon>help_outline</mat-icon>\\n          </button>\\n        </li>\\n\\n        <li>\\n          <button mat-icon-button [matMenuTriggerFor]=\\\"auth\\\">\\n            <mat-icon>person_outline</mat-icon>\\n          </button>\\n          <mat-menu #auth=\\\"matMenu\\\">\\n            <button mat-menu-item (click)=\\\"logout()\\\">\\n              <mat-icon>exit_to_app</mat-icon>\\n              <span>{{ 'LOGOUT' | translate }}</span>\\n            </button>\\n          </mat-menu>\\n        </li>\\n\\n      </ul>\\n\\n    </div>\\n\\n  </mat-toolbar-row>\\n\\n</mat-toolbar>\\n\"","module.exports = \".toolbar-title {\\n  margin: 0 16px 0 16px; }\\n\\n.navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n  cursor: pointer; }\\n\\n.navigation-toolbar {\\n  position: fixed;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  z-index: 3; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxpdGFtYWthbmRhL1Byb2plY3RzL2RhdGluZy9mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvbmF2aWdhdGlvbi1iYXIvbmF2aWdhdGlvbi1iYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxxQkFIMEIsRUFBQTs7QUFNNUI7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFNBQVM7RUFDVCxlQUFlLEVBQUE7O0FBR2pCO0VBQ0ksZUFBZTtFQUNmLE9BQU87RUFDUCxRQUFRO0VBQ1IsTUFBTTtFQUNOLFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2aWdhdGlvbi1iYXIvbmF2aWdhdGlvbi1iYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkdG9vbGJhci10aXRsZS1wYWRkaW5nOiAxNnB4ICFkZWZhdWx0O1xuXG4udG9vbGJhci10aXRsZSB7XG4gIG1hcmdpbjogMCAkdG9vbGJhci10aXRsZS1wYWRkaW5nIDAgJHRvb2xiYXItdGl0bGUtcGFkZGluZztcbn1cblxuLm5hdmlnYXRpb24taXRlbXMge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLm5hdmlnYXRpb24tdG9vbGJhciB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHotaW5kZXg6IDM7XG59XG4iXX0= */\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { TranslateService } from '../../services/translate/translate.service';\n\n@Component({\n  selector: 'app-navigation-bar',\n  templateUrl: './navigation-bar.component.html',\n  styleUrls: ['./navigation-bar.component.scss']\n})\nexport class NavigationBarComponent implements OnInit {\n\n    @Output() toggleSidenav = new EventEmitter<void>();\n    @Output() isAuthenticated = new EventEmitter<void>();\n\n    constructor(\n        private translate: TranslateService,\n        private authService: AuthService,\n        private router: Router\n    ) { }\n\n    ngOnInit() { }\n\n    public logout() {\n        this.authService.performLogout(\"logout message\");\n        this.router.navigate(['/logout']);\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n    <p>\\n        <mat-icon svgIcon=\\\"love\\\" aria-hidden=\\\"false\\\"></mat-icon>\\n    </p>\\n    <form [formGroup]=\\\"registerForm\\\" #ourRegisterDir='ngForm' (submit)=\\\"handleSubmit($event, ourRegisterDir, registerForm)\\\">\\n        <p *ngIf='loginErrors'>{{ loginErrors.email }}</p>\\n        <p *ngIf='loginErrors'>{{ loginErrors.username }}</p>\\n\\n        <mat-card-content>\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" formControlName=\\\"usernameField\\\" />\\n                <div *ngIf='usernameField.invalid && (usernameField.dirty || usernameField.touched)'>\\n                <mat-error *ngIf='usernameField.errors.required'>\\n                  Username is required.\\n                </mat-error>\\n                <mat-error *ngIf='usernameField.errors.maxlength'>\\n                   Max length is 280\\n                </mat-error>\\n                <mat-error *ngIf='usernameField.errors.minlength'>\\n                  Min length is 4\\n                </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"Email\\\" formControlName=\\\"emailField\\\" />\\n                <div *ngIf='emailField.invalid && (emailField.dirty || emailField.touched)'>\\n                <mat-error *ngIf='emailField.errors.required'>\\n                  Username is required.\\n                </mat-error>\\n                <mat-error *ngIf='emailField.errors.maxlength'>\\n                   Max length is 280\\n                </mat-error>\\n                <mat-error *ngIf='emailField.errors.minlength'>\\n                  Min length is 4\\n                </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" formControlName=\\\"passwordField\\\" [type]=\\\"hide ? 'password' : 'text'\\\" />\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <div *ngIf='passwordField.invalid && (passwordField.dirty || passwordField.touched)'>\\n                    <mat-error *ngIf='passwordField.errors.required'>\\n                        Password is required.\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordField.errors.maxlength'>\\n                        Max length is 280\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordField.errors.minlength'>\\n                        Min length is 4\\n                    </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Confirm password\\\" formControlName=\\\"passwordFieldVerification\\\" [type]=\\\"hide ? 'password' : 'text'\\\" />\\n                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n                <div *ngIf='passwordFieldVerification.invalid && (passwordFieldVerification.dirty || passwordFieldVerification.touched)'>\\n                    <mat-error *ngIf='passwordFieldVerification.errors.required'>\\n                        Password is required.\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordFieldVerification.errors.maxlength'>\\n                        Max length is 280\\n                    </mat-error>\\n                    <mat-error *ngIf='passwordFieldVerification.errors.minlength'>\\n                        Min length is 4\\n                    </mat-error>\\n                </div>\\n            </mat-form-field>\\n\\n            <div>\\n                <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"genderField\\\" class=\\\"radio-group\\\">\\n                  <mat-radio-button class=\\\"radio-button\\\" *ngFor=\\\"let gender of listResultGenders\\\" [value]=\\\"gender.id\\\">{{ gender.name }}</mat-radio-button>\\n                </mat-radio-group>\\n            </div>\\n        </mat-card-content>\\n        <br />\\n        <mat-card-actions>\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"registerForm.invalid\\\">{{ 'registerLabel' | translate }}</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"ourRegisterDir.resetForm({})\\\">{{ 'resetLabel' | translate }}</button>\\n        </mat-card-actions>\\n    </form>\\n    <p>\\n\\t\\t<button mat-raised-button routerLink='/login'>{{ 'loginLabel' | translate }}</button>\\n\\t</p>\\n\\n    <!--<mat-form-field>\\n        <input type=\\\"text\\\" matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"register.username\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"register.password\\\" [type]=\\\"hide ? 'password' : 'text'\\\">\\n        <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n        <input type=\\\"email\\\" matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"register.email\\\" [formControl]=\\\"emailFormControl\\\" [errorStateMatcher]=\\\"matcher\\\">\\n        <mat-hint>Errors appear instantly!</mat-hint>\\n        <mat-error *ngIf=\\\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\\\">\\n            Please enter a valid email address\\n        </mat-error>\\n        <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n            Email is <strong>required</strong>\\n        </mat-error>\\n    </mat-form-field>\\n\\n    <button (click)=\\\"createAccount()\\\" mat-raised-button>Register</button>-->\\n</div>\\n\"","module.exports = \"mat-icon {\\n  font-size: 60px;\\n  height: 60px;\\n  width: 60px;\\n  line-height: 60px; }\\n\\n.radio-group {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 15px 0; }\\n\\n.radio-button {\\n  margin: 5px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kZWxpdGFtYWthbmRhL1Byb2plY3RzL2RhdGluZy9mcm9udGVuZC9zcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSxlQUhPO0VBSVAsWUFKTztFQUtQLFdBTE87RUFNUCxpQkFOTyxFQUFBOztBQVVYO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiRzaXplOiA2MHB4O1xuXG5tYXQtaWNvbiB7XG4gICAgZm9udC1zaXplOiAkc2l6ZTtcbiAgICBoZWlnaHQ6ICRzaXplO1xuICAgIHdpZHRoOiAkc2l6ZTtcbiAgICBsaW5lLWhlaWdodDogJHNpemU7XG59XG5cblxuLnJhZGlvLWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWFyZ2luOiAxNXB4IDA7XG59XG5cbi5yYWRpby1idXR0b24ge1xuICBtYXJnaW46IDVweDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../services/auth/auth.service';\nimport { UserService } from '../../services/user/user.service';\nimport { GenderService } from '../../services/user/gender/gender.service';\n\nimport { AuthRegister } from '../../models/auth';\nimport { User } from '../../models/user';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  providers: [UserService]\n})\nexport class RegisterComponent implements OnInit, ErrorStateMatcher {\n    register;\n    hide = true;\n    listGender: any;\n    listResultGenders = [];\n\n    userData: User;\n    registerForm: FormGroup;\n    usernameField: FormControl;\n    passwordField: FormControl;\n    passwordFieldVerification: FormControl;\n    emailField: FormControl;\n    genderField: FormControl;\n    authLoginSub: any;\n    loginErrors: any;\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n    }\n\n    constructor(\n        private userService: UserService,\n        private authService: AuthService,\n        private genderService: GenderService,\n        private router: Router\n    ) {\n        this.listGenders();\n    }\n\n    listGenders () {\n        this.listGender = this.genderService.getGenders().subscribe(data=>{\n            console.log(data)\n            this.listResultGenders = data\n        });\n    }\n\n    emailFormControl = new FormControl('', [\n        Validators.required,\n        Validators.email,\n    ]);\n\n    ngOnInit() {\n        this.usernameField  = new FormControl(\"\", [\n                    Validators.required,\n                    Validators.minLength(0),\n                    Validators.maxLength(280)\n               ])\n       this.emailField  = new FormControl(\"\", [\n                   Validators.email,\n                   Validators.minLength(0),\n                   Validators.maxLength(280)\n              ])\n        this.passwordField  = new FormControl(\"\", [\n                    Validators.required,\n                    Validators.minLength(4),\n                    Validators.maxLength(280)\n               ])\n       this.passwordFieldVerification  = new FormControl(\"\", [\n                   Validators.required,\n                   Validators.minLength(4),\n                   Validators.maxLength(280)\n              ])\n      this.genderField  = new FormControl(\"\", [\n                  Validators.required\n             ])\n\n        this.registerForm = new FormGroup({\n            'usernameField': this.usernameField,\n            'passwordField': this.passwordField,\n            'passwordFieldVerification': this.passwordFieldVerification,\n            'emailField': this.emailField,\n            'genderField': this.genderField\n        });\n        /*this.register = {\n            username: '',\n            password: '',\n            email: '',\n            confirmation_code: 'toto',\n            details: 'toto'\n        };*/\n    }\n\n    ngOnDestroy() {\n        if (this.authLoginSub){\n          this.authLoginSub.unsubscribe()\n        }\n\n        if (this.listGender){\n            this.listGender.unsubscribe()\n        }\n    }\n\n    createAccount(data) {\n        /*this.userService.registerUser(this.register).subscribe(\n            response => {\n                alert('User ' + this.register.username + ' has been created!')\n            },\n            error => console.log('error' , error)\n        )*/\n        // this.userService.registerUser(this.register);\n        this.authLoginSub = this.authService.register(data).subscribe(data=>{\n           this.userData = data as User;\n           this.authService.setUsername(this.userData);\n           this.router.navigate(['/login']);\n          }, error=>{\n              console.log(error)\n            this.loginErrors = error['error']\n          })\n    }\n\n    handleSubmit(event:any, ourRegisterDir:NgForm, registerFormGroup:FormGroup) {\n        event.preventDefault();\n        if(ourRegisterDir.submitted) {\n            let authRegisterData = new AuthRegister(\n                registerFormGroup.value['usernameField'],\n                registerFormGroup.value['emailField'],\n                registerFormGroup.value['passwordField'],\n                registerFormGroup.value['passwordFieldVerification'],\n                registerFormGroup.value['genderField']\n                )\n            this.createAccount(authRegisterData);\n            ourRegisterDir.resetForm({})\n        }\n    }\n\n}\n","module.exports = \"<mat-sidenav-container>\\n\\n  <mat-sidenav #sidenav mode=\\\"over\\\">\\n\\n    <mat-toolbar>\\n      <mat-toolbar-row>\\n        <h2 class=\\\"toolbar-title\\\"> {{ 'title' | translate }} </h2>\\n      </mat-toolbar-row>\\n    </mat-toolbar>\\n\\n    <mat-nav-list>\\n\\n      <h2 matSubheader> {{ 'MYWORK' | translate }} </h2>\\n\\n      <a mat-list-item routerLink=\\\"/\\\" style=\\\"height: 0;\\\"></a>\\n\\n      <a *ngFor=\\\"let item of myWorkRoutes\\\"\\n         mat-list-item\\n         (click)=\\\"sidenav.close()\\\"\\n         routerLinkActive\\n         #routerLinkActiveInstance=\\\"routerLinkActive\\\"\\n         [class.list-item-active]=\\\"routerLinkActiveInstance.isActive\\\"\\n         [routerLink]=\\\"[item.route]\\\">\\n        <mat-icon matListIcon class=\\\"app-nav-list-icon\\\"> {{ item.icon }} </mat-icon>\\n        {{item.title}}\\n      </a>\\n\\n      <mat-divider></mat-divider>\\n\\n      <h2 matSubheader> {{ 'CUSTOMERS' | translate }} </h2>\\n\\n      <a *ngFor=\\\"let item of customerRoutes\\\"\\n         mat-list-item\\n         (click)=\\\"sidenav.close()\\\"\\n         routerLinkActive\\n         #routerLinkActiveInstance=\\\"routerLinkActive\\\"\\n         [class.list-item-active]=\\\"routerLinkActiveInstance.isActive\\\"\\n         [routerLink]=\\\"[item.route]\\\">\\n        <mat-icon matListIcon class=\\\"app-nav-list-icon\\\"> {{ item.icon }} </mat-icon>\\n        {{item.title}}\\n      </a>\\n\\n    </mat-nav-list>\\n\\n  </mat-sidenav>\\n\\n  <mat-sidenav-content>\\n      <app-navigation-bar *ngIf=\\\"isAuthenticated()\\\" (toggleSidenav)=\\\"sidenav.toggle()\\\"></app-navigation-bar>\\n      <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZS1uYXYvc2lkZS1uYXYuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '../../services/translate/translate.service';\n\nimport { AuthService } from '../../services/auth/auth.service';\n\ninterface ROUTE {\n    icon?: string;\n    route?: string;\n    title?: string;\n}\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\n\n    myWorkRoutes: ROUTE[] = [\n        {\n            icon: 'assignment',\n            route: 'sales/activities',\n            title: 'Activities',\n        }, {\n            icon: 'dashboard',\n            route: 'sales/dashboards',\n            title: 'Dashboards',\n        }\n    ];\n\n    customerRoutes: ROUTE[] = [\n    {\n      icon: 'contacts',\n      route: 'sales/accounts',\n      title: 'Accounts',\n    }, {\n      icon: 'people',\n      route: 'sales/contacts',\n      title: 'Contacts',\n    }, {\n      icon: 'settings_phone',\n      route: 'sales/leads',\n      title: 'Leads',\n    }, {\n      icon: 'account_box',\n      route: 'sales/opportunities',\n      title: 'Opportunities',\n    }\n  ];\n\n  constructor(\n      private translate: TranslateService,\n      private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  isAuthenticated () {\n      return this.authService.checkToken();\n  }\n\n}\n","export class AuthLogin {\n    username: string;\n    password: string;\n\n    constructor(usn: string, pwd: string) {\n        this.username = usn;\n        this.password  = pwd;\n    }\n}\n\nexport class AuthRegister {\n    username: string;\n    email: string;\n    password: string;\n    password2: string;\n    gender: string;\n\n    constructor(\n        usn: string,\n        eml: string,\n        pwd: string,\n        pwdConfirm: string,\n        gendr: string\n    ) {\n        this.username = usn;\n        this.email = eml;\n        this.password  = pwd;\n        this.password2  = pwdConfirm;\n        this.gender = gendr;\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '../../services/translate/translate.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n\n    constructor(private translate: TranslateService) {}\n\n    transform(key: any): any {\n        return this.translate.data[key] || key;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import { CookieService } from 'angular2-cookie/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { of } from  'rxjs/observable/of';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AuthLogin } from '../../models/auth';\nimport { User } from '../../models/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private httpOptions: any;\n    private baseUrl = `${environment.serverUrl}/api/`;\n    private nextUrl;\n    auth$: Subject<boolean>;\n\n    constructor(\n        private http: HttpClient,\n        private cookieService: CookieService,\n        private router: Router,\n        private route: ActivatedRoute,\n    ) {\n        this.auth$ = new Subject<boolean>();\n    }\n\n    isAuthenticated(status: boolean) {\n        this.auth$.next(status);\n    }\n\n    createHeaders(token?: string) {\n        let data = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': this.cookieService.get('csrftoken')\n        };\n\n        if (token) {\n            data['Authorization'] = `JWT ${token}`;\n        }\n\n        this.httpOptions = {\n            headers: new HttpHeaders(data)\n        }\n\n        return this.httpOptions;\n    }\n\n    checkToken(){\n        return this.cookieService.check(\"jwttoken\")\n    }\n    getToken(){\n        return this.cookieService.get(\"jwttoken\")\n    }\n    performLogout(msg?:string){\n        return this.cookieService.delete('jwttoken', '/');\n        // this.deleteUsername()\n        this.router.navigate(['/']);\n    }\n\n    getNextUrl(){\n        this.route.queryParams.subscribe( params => {\n            if (params['next']){\n                this.nextUrl = params['next']\n                switch (this.nextUrl) {\n                    case \"/account/delete\":\n                    this.nextUrl = null\n                    break;\n                }\n            }\n        })\n        return this.nextUrl;\n    }\n\n    setUsername(user:User){\n        this.cookieService.set('username', user.username);\n    }\n\n    deleteUsername(){\n        this.cookieService.delete('username');\n    }\n\n    getUsername():string {\n        return this.cookieService.get('username') || null;\n    }\n\n    performLogin(token, expires?:Date, msg?:string) {\n        let expiryDate = null;\n        if (expires){\n            expiryDate = expires\n        }\n        this.cookieService.set('jwttoken', token, expiryDate, \"/\");\n        const nextUrl = this.getNextUrl();\n        if (nextUrl){\n            this.router.navigate([nextUrl]);\n        } else {\n            this.router.navigate(['/dashboard']);\n        }\n    }\n    /*\n    login(userData) {\n    let url: string = '/api/login-user';\n    return this.http.post(url, userData, { headers: this.httpOptions }).subscribe(\n    data => {\n    console.log(data)\n    if( data['status'] == 'success' ) {\n    //this.cookieService.put('token', data['token']);\n} else {\nconsole.log('Invalid Credentials');\n}\n},\nerr => {\nconsole.log(err);\n}\n);\n}\n\nregister(userData) {\nlet url: string = '/api/register-user';\nreturn this.http.post(url, userData, { headers: this.httpOptions }).subscribe(\ndata => {\nconsole.log(data);\n},\nerr => {\nconsole.log(err);\n}\n);\n}*/\n\n    login(data: AuthLogin): Observable<any>{\n        // let token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImNmZSIsImV4cCI6MTUxNzQzMDkzNSwiZW1haWwiOiJoZWxsb0B0ZWFtY2ZlLmNvbSIsIm9yaWdfaWF0IjoxNTE3NDMwNjM1fQ.pB6-lE55DBBu0pGv_r85oFaI3OODc69MlAIfno7SM_w'\n        let httpOptions = this.createHeaders();\n        let apiLoginEndpoint = `${this.baseUrl}login-user/`;\n        return this.http.post(apiLoginEndpoint, data, httpOptions); // , httpOptions)\n    }\n\n    register(data: any): Observable<any>{\n        let httpOptions = this.createHeaders();\n        let apiRegisterEndpoint = `${this.baseUrl}register-user/`;\n        return this.http.post(apiRegisterEndpoint, data, httpOptions);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport 'rxjs/add/operator/do';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(\n        private cookieService: CookieService,\n        private router: Router\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n        let csrftoken = this.cookieService.get('csrftoken');\n        let jwttoken = this.cookieService.get('jwttoken');\n\n        if (jwttoken){\n            request = request.clone({\n                setHeaders: {\n                    // This is where you can use your various tokens\n                    Authorization: `JWT ${jwttoken}`,\n                    'X-CSRFToken': `${csrftoken}`\n                }\n            });\n        }\n\n        return next.handle(request).do((event: HttpEvent<any>) => {\n            if (event instanceof HttpResponse) {\n                console.log(event,\"cool it worked!\")\n            }\n        }, (err: any) => {\n            if (err instanceof HttpErrorResponse) {\n                if (err.status === 401 || err.status === 403) {\n                    const currentUrl = this.router.url\n                    if (currentUrl != '/login') {\n                        alert(\"Session ended. Please login again\")\n                        this.cookieService.delete('jwttoken')\n                        this.router.navigate(['/login'], {queryParams: {next: currentUrl}})\n                    }\n                    // /login?next=/status/create\n                }\n            }\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\n\nimport { Observable } from 'rxjs';\nimport { of } from  'rxjs/observable/of';\nimport { catchError, map, tap } from  'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n    private httpOptions: any;\n    private baseUrl = `${environment.serverUrl}/api/`;\n\n    constructor(\n        private http: HttpClient,\n        private cookieService: CookieService\n    ) { }\n\n    createHeaders(token?: string) {\n        let data = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': this.cookieService.get('csrftoken')\n        };\n\n        if (token) {\n            data['Authorization'] = `JWT ${token}`\n        }\n\n        this.httpOptions = {\n            headers: new HttpHeaders(data)\n        }\n        console.log(this.httpOptions.headers)\n\n        return this.httpOptions;\n    }\n\n    list(): Observable<any>{\n        let apiListEndpoint = `${this.baseUrl}messages/`\n        return this.http.get(apiListEndpoint)\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport {environment} from '../../../environments/environment';\n\n@Injectable()\nexport class TranslateService {\n    data: any = {}\n\n    constructor(private http: HttpClient) {}\n\n    use(lang: string): Promise<{}> {\n        return new Promise<{}>((resolve, reject) => {\n            const langPath = `${environment.staticAssetsUrl}i18n/${lang || 'en'}.json`;\n\n            this.http.get<{}>(langPath).subscribe(\n                translation => {\n                    this.data = Object.assign({}, translation || {});\n                    resolve(this.data);\n                },\n                error => {\n                    this.data = {};\n                    resolve(this.data);\n                }\n            );\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport {environment} from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenderService {\n    private httpOptions: any;\n    private baseUrl = `${environment.serverUrl}/api/`;\n\n    constructor(\n        private http: HttpClient,\n        private cookieService: CookieService\n    ) { }\n\n    getGenders(): Observable<any>{\n        return this.http.get(`${this.baseUrl}genders/`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n//import { readCookie } from '../cookie.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n    // http options used for making API calls\n    private httpOptions: any;\n    public token: string;\n    public token_expires: Date;\n    public username: string;\n    public errors: any = [];\n\n    constructor(private http: HttpClient) {\n        this.httpOptions = {\n            headers: new HttpHeaders({'Accept': 'application/json', 'Content-Type': 'application/json', /*'X-CSRFToken': readCookie('csrftoken')*/})\n        };\n    }\n\n    public login(user) {\n        this.http.post('/api/token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n            data => {\n                this.updateData(data['token']);\n            },\n            err => {\n                this.errors = err['error'];\n            }\n        );\n    }\n\n    public refreshToken() {\n        this.http.post('/api/token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n            data => {\n                this.updateData(data['token']);\n            },\n            err => {\n                this.errors = err['error'];\n            }\n        );\n    }\n\n    public logout() {\n        this.token = null;\n        this.token_expires = null;\n        this.username = null;\n\n        localStorage.removeItem('id_token');\n    }\n\n    private updateData(token) {\n        this.token = token;\n        this.errors = [];\n\n        const token_parts = this.token.split(/\\./);\n        const token_decoded = JSON.parse(window.atob(token_parts[1]));\n        this.token_expires = new Date(token_decoded.exp * 1000);\n        this.username = token_decoded.username;\n\n        localStorage.setItem('id_token', this.token);\n    }\n\n    /*public registerUser(userData): Observable<any> {\n        return this.http.post('/api/users/', userData, this.httpOptions);\n    }*/\n\n    public registerUser(userData) {\n        this.http.post('/api/users/', JSON.stringify(userData), this.httpOptions).subscribe(\n            data => {\n                console.log(data);\n            },\n            err => {\n                this.errors = err['error'];\n            }\n        );\n    }\n}\n","import {\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatNativeDateModule,\n    MatPaginatorModule } from '@angular/material';\n// Icons\nimport { MatIconModule } from \"@angular/material/icon\";\n// Layout\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatTreeModule } from '@angular/material/tree';\n// Buttons & Indicators\nimport { MatBadgeModule } from '@angular/material/badge';\n// Popups & Modals\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { NgModule } from '@angular/core';\n// UI\nimport { LayoutModule } from '@angular/cdk/layout';\n\n@NgModule({\n    imports: [\n        MatDividerModule,\n        MatTreeModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatGridListModule,\n        MatCardModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatIconModule,\n        MatNativeDateModule,\n        LayoutModule\n    ],\n    exports: [\n        MatDividerModule,\n        MatTreeModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatGridListModule,\n        MatCardModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatIconModule,\n        MatNativeDateModule,\n        LayoutModule\n    ]\n})\nexport class MaterialModule { }\n","export const environment = {\n  production: true,\n  serverUrl: \"https://lov3r.herokuapp.com/\",\n  staticAssetsUrl: \"https://lov3r.herokuapp.com/static/angular/assets/\" \n};\n","import 'hammerjs';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}